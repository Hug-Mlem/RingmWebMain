{"version":3,"sources":["app/pages/loading/index.js","app/partials/common/ButtonLoading.js","app/partials/common/InputForm.js","app/pages/user/ListUser.js"],"names":["Loading","style","display","justifyContent","minHeight","alignItems","className","ButtonLoading","props","type","clsx","loading","onClick","disabled","children","InputForm","inputRef","useRef","useEffect","focus","current","placeholder","value","min","maxLength","onChange","e","onChangeValue","target","onKeyPress","required","isRequired","readOnly","isReadOnly","ref","useStyles1","makeStyles","theme","root","width","marginTop","spacing","overflowX","table","marginLeft","connect","user","auth","classes1","useState","page","setPage","rows","setRow","dataSearch","setData","visible","dataDelete","setDataDelete","total","setTotal","isLoading","setLoading","isLoadDelete","setLoadDelete","showDetail","setShowDetail","dataDetail","setDataDetail","typeOrder","setTypeOrder","stateOrder","setStateOrder","nameState","setNameState","emailState","setEmailState","updateId","id","searchanization","limit","makeRequest","then","data","signal","listUsers","catch","err","console","log","key","hideDeleteModal","idDel","deleteAction","showSuccessMessageIcon","dataOrg","filter","item","showErrorMessage","onOrder","state","to","elevation","onSubmit","preventDefault","name","email","phone","src","height","length","map","row","cursor","data-toggle","data-placement","title","detailUser","color","fontSize","history","push","colSpan","align","pageSize","p","s","newPage","onOk","onCancel","footer"],"mappings":"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","file":"static/js/5.b5400dc8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './loading.css'\r\n\r\nfunction Loading() {\r\n  return <div style={{ display: 'flex', justifyContent: 'center', minHeight:'calc(100vh - 65px - 105px)',alignItems:'center' }}><div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst ButtonLoading = (props) => {\r\n\r\n    return <button \r\n        type={props.type || \"default\"}\r\n        className={`${clsx({\r\n            \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": props.loading\r\n        })} ${props.className || \"\"}`}\r\n        onClick={props.onClick ? props.onClick : null}\r\n        style={props.style || null}\r\n        disabled={props.disabled === true ? true : false}\r\n    >{props.children}</button>\r\n};\r\n\r\nButtonLoading.propTypes = {\r\n    className: PropTypes.string,\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default ButtonLoading;","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputForm = (props) => {\r\n\r\n    const inputRef = useRef();\r\n\r\n    const componentDidMount = () => {\r\n      if (props.focus) {\r\n        inputRef.current.focus();\r\n      }\r\n    }\r\n\r\n    useEffect(componentDidMount, []);\r\n\r\n    return <input\r\n        type={props.type || \"text\"}\r\n        className={`form-control inline-block ${props.className || \"\"}`}\r\n        placeholder={props.placeholder || \"\"}\r\n        value={props.value}\r\n        min={props.min || \"\"}\r\n        maxLength={props.maxLength || \"\"}\r\n        onChange={(e) => { props.onChangeValue(e.target.value) }}\r\n        onKeyPress={props.onKeyPress ? (e) => { props.onKeyPress(e) } : null}\r\n        required={props.isRequired || false}\r\n        readOnly={props.isReadOnly || false}\r\n        ref={inputRef}\r\n        style={props.style}\r\n        \r\n    />\r\n};\r\n\r\nInputForm.propTypes = {\r\n    className: PropTypes.string,\r\n    type: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    isRequired: PropTypes.bool,\r\n    isReadOnly: PropTypes.bool,\r\n    isDisabled: PropTypes.bool,\r\n    value: PropTypes.any,\r\n    min: PropTypes.number,\r\n    max: PropTypes.number,\r\n    onChangeValue: PropTypes.func.isRequired\r\n};\r\n\r\nexport default InputForm;","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Icon\r\n} from \"@material-ui/core\";\r\n\r\nimport { Modal, Pagination, Button} from \"antd\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport InputForm from \"../../partials/common/InputForm\";\r\nimport Loading from \"../loading\";\r\nimport ButtonLoading from \"../../partials/common/ButtonLoading\";\r\nimport { connect } from \"react-redux\";\r\nimport makeRequest from \"../../libs/request\";\r\nimport \"./style.css\";\r\nimport {\r\n  showErrorMessage,\r\n  showSuccessMessageIcon,\r\n} from \"../../actions/notification\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    marginLeft: \"5%\",\r\n    width: \"90%\",\r\n  },\r\n}));\r\n\r\nconst ListUser = (props) => {\r\n  const classes1 = useStyles1();\r\n  const rowsPerPage = 10;\r\n  const [page, setPage] = useState(1);\r\n  const [rows, setRow] = useState([]);\r\n  const [dataSearch, setData] = useState({});\r\n  const [dataDelete, setDataDelete] = useState({ visible: false });\r\n  const [total, setTotal] = useState(0);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [isLoadDelete, setLoadDelete] = useState(false);\r\n  const [showDetail, setShowDetail] = useState(false);\r\n  const [dataDetail, setDataDetail] = useState({});\r\n  const [typeOrder, setTypeOrder] = useState('name');\r\n  const [stateOrder, setStateOrder] = useState('up');\r\n  const [nameState, setNameState] = useState('up');\r\n  const [emailState, setEmailState] = useState('up');\r\n  const updateId = props.user.id;\r\n  useEffect(() => {\r\n    searchanization({ page: 1, limit: rowsPerPage, typeOrder, stateOrder });\r\n  }, []);\r\n\r\n\r\n  const searchanization = (dataSearch = {}) => {\r\n    setLoading(true);\r\n    makeRequest(\"get\", `user/search`, dataSearch)\r\n      .then(({ data }) => {\r\n        if (data.signal) {\r\n          const { listUsers, total } = data.data;\r\n          setRow(listUsers);\r\n          setTotal(total);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    setPage(newPage);\r\n    searchanization({ ...dataSearch, page: newPage, limit: rowsPerPage });\r\n  };\r\n\r\n  const onChangeValue = (key, value) => {\r\n    setData({\r\n      ...dataSearch,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const hideDeleteModal = () => {\r\n    setDataDelete({\r\n      ...dataDelete,\r\n      visible: false,\r\n      idDel: 0,\r\n    });\r\n  };\r\n\r\n  const deleteAction = (id) => {\r\n    setLoadDelete(true);\r\n    hideDeleteModal();\r\n    setLoadDelete(false);\r\n    makeRequest(\"get\", `user/delete`, { id: dataDelete.id })\r\n      .then(({ data }) => {\r\n        if (data.signal) {\r\n          showSuccessMessageIcon(\"Xóa thành công\");\r\n          let dataOrg = rows.filter((item) => item.id !== dataDelete.id);\r\n          setRow(dataOrg);\r\n          hideDeleteModal();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        showErrorMessage(\"Xóa thất bại\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const showModalDelete = (id) => {\r\n    setDataDelete({\r\n      id,\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  const unfilteredData = (e) => {\r\n    setData({});\r\n    setPage(1);\r\n    searchanization({ page: 1, limit: rowsPerPage });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPage(1);\r\n    searchanization({ ...dataSearch, page: 1, limit: rowsPerPage });\r\n  };\r\n\r\n  const detailUser = (row) => {\r\n    setShowDetail(true);\r\n    setDataDetail(row);\r\n  };\r\n\r\n  const onOrder = (key, state) => {\r\n    setTypeOrder(key);\r\n    setStateOrder(state);\r\n    if (key === 'name') {\r\n      setNameState(state);\r\n    }\r\n    if (key === 'email') {\r\n      setEmailState(state);\r\n    }\r\n\r\n    setPage(1);\r\n    searchanization({ ...dataSearch, page: 1, limit: rowsPerPage, typeOrder: key, stateOrder: state });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to=\"/user/add\"\r\n        className=\"btn btn-primary btn-bold btn-sm btn-icon-h kt-margin-l-10\"\r\n      >\r\n        Tạo Người Dùng Mới\r\n      </Link>\r\n      <Link\r\n        to={`/user/update/${updateId}`}\r\n        className=\"btn btn-primary btn-bold btn-sm btn-icon-h kt-margin-l-10\"\r\n      >\r\n        Sửa Thông Tin Cá Nhân\r\n      </Link>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"kt-section\">\r\n            <div className=\"kt-section__content\">\r\n\r\n              <Paper className={classes1.root} elevation={4}>\r\n                <Paper className=\"lablePaper\" elevation={4}>\r\n                  <div className=\"labelList\">\r\n                    <label>Danh Sách Người Dùng</label>\r\n                  </div>\r\n                </Paper>\r\n\r\n                <div className=\"col-md-12 part\">\r\n                  <Form onSubmit={handleSubmit}>\r\n\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-2 searchBox\">\r\n                        <div className=\"form-group\">\r\n                          <InputForm\r\n                            type=\"text\"\r\n                            placeholder=\"Tìm theo tên người dùng\"\r\n                            value={dataSearch.name || \"\"}\r\n                            onChangeValue={(value) => {\r\n                              onChangeValue(\"name\", value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2 searchBox\">\r\n                        <div className=\"form-group\">\r\n                          <InputForm\r\n                            type=\"text\"\r\n                            placeholder=\"Tìm theo email người dùng\"\r\n                            value={dataSearch.email || \"\"}\r\n                            onChangeValue={(value) => {\r\n                              onChangeValue(\"email\", value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-2 searchBox\">\r\n                        <div className=\"form-group\">\r\n                          <InputForm\r\n                            type=\"text\"\r\n                            placeholder=\"Tìm theo số điện thoại \"\r\n                            value={dataSearch.phone || \"\"}\r\n                            onChangeValue={(value) => {\r\n                              onChangeValue(\"phone\", value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"form-group col-md-3\">\r\n                        <div className=\"form-group\" style={{ display: \"flex\" }}>\r\n                          <button\r\n                            className=\"btn btn-label-primary btn-bold btn-sm btn-icon-h kt-margin-l-10\"\r\n                            onClick={unfilteredData}\r\n                            type=\"button\"\r\n                          >\r\n                            <span>Bỏ lọc</span>\r\n                          </button>\r\n\r\n                          <ButtonLoading\r\n                            type=\"submit\"\r\n                            className=\"btn btn-label-primary btn-bold btn-sm btn-icon-h kt-margin-l-10\"\r\n                            loading={isLoading}\r\n                          >\r\n                            <span>Tìm kiếm</span>\r\n                          </ButtonLoading>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n                {isLoading ? (\r\n                  <Loading />\r\n                ) : (\r\n                    <Paper className=\"tablePaper\" elevation={6}>\r\n                      <Table className=\"table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell >Tên người dùng (\r\n                            {nameState === 'down' && <img onClick={() => onOrder('name', 'up')} src='/images/down-arrow.png' width={10} height={15} /> ||\r\n                                <img onClick={() => onOrder('name', 'down')} src='/images/up-arrow.png' width={10} height={15} />})\r\n                            </TableCell>\r\n                            <TableCell  >Email (\r\n                            {emailState === 'down' && <img onClick={() => onOrder('email', 'up')} src='/images/down-arrow.png' width={10} height={15} /> ||\r\n                                <img onClick={() => onOrder('email', 'down')} src='/images/up-arrow.png' width={10} height={15} />})\r\n                            </TableCell>\r\n                            <TableCell  >Số điện thoại \r\n                            </TableCell>\r\n                            <TableCell className=\"btnAction\" >Action</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {rows && rows.length ? (\r\n                            rows.map((row, key) => (\r\n                              <TableRow key={`users-${key}`}>\r\n                                <TableCell >{row.name}</TableCell>\r\n                                <TableCell >{row.email}</TableCell>\r\n                                <TableCell >{row.phone}</TableCell>\r\n                                <TableCell>\r\n                                  <span\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    data-toggle=\"tooltip\"\r\n                                    data-placement=\"top\"\r\n                                    title=\"Detail\"\r\n                                  >\r\n                                    <Icon\r\n                                      className=\"fa fa-info-circle\"\r\n                                      onClick={(e) => {\r\n                                        detailUser(row);\r\n                                      }}\r\n                                      style={{\r\n                                        color: \"#0000ff\",\r\n                                        fontSize: 15,\r\n                                      }}\r\n                                    />\r\n                                  </span>\r\n                                  <span\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    data-toggle=\"tooltip\"\r\n                                    data-placement=\"top\"\r\n                                    title=\"Update\"\r\n                                  >\r\n                                    <Icon\r\n                                      className=\"fa fa-pen\"\r\n                                      onClick={() =>\r\n                                        props.history.push(\r\n                                          `/user/update/${row.id}`\r\n                                        )\r\n                                      }\r\n                                      style={{\r\n                                        color: \"#ffa800\",\r\n                                        fontSize: 15,\r\n                                        marginLeft: 15,\r\n                                      }}\r\n                                    />\r\n                                  </span>\r\n                                  <span\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    data-toggle=\"tooltip\"\r\n                                    data-placement=\"top\"\r\n                                    title=\"Delete\"\r\n                                  >\r\n                                    <Icon\r\n                                      className=\"fa fa-trash\"\r\n                                      onClick={() => showModalDelete(row.id)}\r\n                                      style={{\r\n                                        color: \"rgb(220, 0, 78)\",\r\n                                        fontSize: 15,\r\n                                        marginLeft: 15,\r\n                                      }}\r\n                                    />\r\n                                  </span>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            ))\r\n                          ) : (\r\n                              <TableRow>\r\n                                <TableCell colSpan={10} align=\"center\">\r\n                                  Không có dữ liệu\r\n                          </TableCell>\r\n                              </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                      </Table>\r\n\r\n                    </Paper>\r\n                  )}\r\n                {total > rowsPerPage && (\r\n                  <div className=\"custom-svg customSelector\">\r\n                    <Pagination\r\n                      className=\"pagination-crm\"\r\n                      current={page}\r\n                      pageSize={rowsPerPage}\r\n                      total={total}\r\n                      onChange={(p, s) => handleChangePage(p)}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Paper>\r\n            </div>\r\n            <Modal\r\n              title=\"Xóa Người Dùng\"\r\n              visible={dataDelete.visible}\r\n              onOk={deleteAction}\r\n              onCancel={hideDeleteModal}\r\n              footer={[\r\n                <ButtonLoading\r\n                  type=\"default\"\r\n                  onClick={hideDeleteModal}\r\n                  className=\"btn btn-label-secondary btn-secondary\"\r\n                >\r\n                  Đóng\r\n                </ButtonLoading>,\r\n                <ButtonLoading\r\n                  className=\"btn btn-label-danger btn-danger\"\r\n                  onClick={deleteAction}\r\n                  loading={isLoadDelete}\r\n                >\r\n                  <span>Xóa</span>\r\n                </ButtonLoading>,\r\n              ]}\r\n            >\r\n              <p>Bạn có muốn xóa người dùng này?</p>\r\n            </Modal>\r\n            <Modal\r\n              title=\"Chi tiết người dùng\"\r\n              visible={showDetail}\r\n              width={600}\r\n              onCancel={() => setShowDetail(false)}\r\n              footer={[\r\n                <Button type=\"primary\" onClick={() => setShowDetail(false)}>\r\n                  OK\r\n                </Button>,\r\n              ]}\r\n            >\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <span>Tên người dùng : {dataDetail.name}</span>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <span>\r\n                    Email người dùng: {dataDetail.email}\r\n                  </span>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <span>Số điện thoại người dùng: {dataDetail.phone}</span>\r\n                </div>\r\n              </div>\r\n\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  user: auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ListUser);\r\n"],"sourceRoot":""}