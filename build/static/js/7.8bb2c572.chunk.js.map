{"version":3,"sources":["app/pages/loading/index.js","app/pages/dashboard/Dashboard.js"],"names":["Loading","style","display","justifyContent","minHeight","alignItems","className","connect","user","auth","props","useState","listData","setListData","isLoading","setLoading","useEffect","getInfoDashboard","makeRequest","then","data","signal","objectData","i","listUserAnswers","length","objData","totalForm","totalForms","totalUser","totalUsers","title","listTitle","dataLabel","chart","zoom","enabled","dataLabels","stroke","curve","grid","row","colors","opacity","xaxis","floating","axisTicks","show","axisBorder","labels","categories","listForms","listForm","yaxis","formatter","value","background","foreColor","padding","borderRadius","borderWidth","borderColor","dropShadow","top","left","blur","color","name","listUserAnswer","push","Body","map","item","idx","marginTop","marginBottom","margin","textAlign","fontSize","font","height","href","id","borderBottom","options","series","type"],"mappings":"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","file":"static/js/7.8bb2c572.chunk.js","sourcesContent":["import React from 'react';\r\nimport './loading.css'\r\n\r\nfunction Loading() {\r\n  return <div style={{ display: 'flex', justifyContent: 'center', minHeight:'calc(100vh - 65px - 105px)',alignItems:'center' }}><div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>\r\n}\r\n\r\nexport default Loading\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport ApexCharts from \"react-apexcharts\";\r\nimport makeRequest from '../../libs/request';\r\nimport { Card } from \"react-bootstrap\";\r\nimport Loading from '../loading';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  const [listData, setListData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getInfoDashboard();\r\n  }, []);\r\n\r\n  const getInfoDashboard = () => {\r\n    setLoading(true);\r\n    makeRequest('get', `report/getReportDashboard`).then(({ data }) => {\r\n      if (data.signal) {\r\n        let objectData = [];\r\n        for (let i = 0; i < data.data.listUserAnswers.length; i++) {\r\n          let objData = {\r\n            totalForm: data.data.totalForms[i],\r\n            totalUser: data.data.totalUsers[i],\r\n            title: data.data.listTitle[i],\r\n            dataLabel: {\r\n              chart: {\r\n                zoom: {\r\n                  enabled: false\r\n                }\r\n              },\r\n              dataLabels: {\r\n                enabled: false\r\n              },\r\n              stroke: {\r\n                curve: 'smooth'\r\n              },\r\n              grid: {\r\n                row: {\r\n                  colors: ['#f3f3f3', 'transparent'],\r\n                  opacity: 0.5\r\n                },\r\n              },\r\n              xaxis: {\r\n                floating: true,\r\n                axisTicks: {\r\n                  show: false\r\n                },\r\n                axisBorder: {\r\n                  show: false\r\n                },\r\n                labels: {\r\n                  show: false\r\n                },\r\n                categories: data.data.listForms[i].listForm,\r\n              },\r\n              yaxis: {\r\n                labels: {\r\n                  formatter: function (value) {\r\n                    return `${value} người`;\r\n                  },\r\n                  background: {\r\n                    enabled: true,\r\n                    foreColor: '#fff',\r\n                    padding: 4,\r\n                    borderRadius: 2,\r\n                    borderWidth: 1,\r\n                    borderColor: '#fff',\r\n                    opacity: 0.9,\r\n                    dropShadow: {\r\n                      enabled: false,\r\n                      top: 1,\r\n                      left: 1,\r\n                      blur: 1,\r\n                      color: '#000',\r\n                      opacity: 0.45\r\n                    }\r\n                  },\r\n                },\r\n              }\r\n            },\r\n            data: [\r\n              {\r\n                name: 'Số người tham gia',\r\n                data: data.data.listUserAnswers[i].listUserAnswer\r\n              }\r\n            ]\r\n          }\r\n\r\n          objectData.push(objData);\r\n        }\r\n        setListData([...objectData]);\r\n      }\r\n      setLoading(false);\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return <div className=\"row\">\r\n    <div className=\"col-md-12\">\r\n      <div className=\"kt-section\">\r\n        <Card>\r\n          <Card.Body>\r\n            {isLoading ? <Loading /> : <>\r\n              {\r\n                listData && listData.length && listData.map((item, idx) => {\r\n                  return <> <div className=\"row\" style={{ marginTop: '20px', marginBottom: '20px' }}>\r\n                    <div className=\"col-lg-12\">\r\n                      <div style={{ margin: 'auto', textAlign: 'center', fontSize: '30px', font: 'bold', marginBottom: '10px', color: '#122352' }}>Biểu đồ đợt khảo sát {item.title}</div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-3\">\r\n                          <div className=\"card card-custom bg-success gutter-b\" style={{ height: '150px' }}>\r\n                            <div className=\"card-body\">\r\n                              <i className=\"flaticon2-analytics-2 text-white icon-2x\"> </i>\r\n                              <div className=\"text-inverse-success font-weight-bolder font-size-h2 mt-3\">{item.totalForm || 0}</div>\r\n                              <Link href=\"#\" className=\"text-inverse-success font-weight-bold font-size-lg mt-1\">Tổng số form trong đợt</Link>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3\">\r\n                          <div className=\"card card-custom bg-primary gutter-b\" style={{ height: '150px' }}>\r\n                            <div className=\"card-body\">\r\n                              <i className=\"flaticon2-shopping-cart-1 text-white icon-2x\"> </i>\r\n                              <div className=\"text-inverse-success font-weight-bolder font-size-h2 mt-3\"> {item.totalUser || 0} </div>\r\n                              <Link href=\"#\" className=\"text-inverse-success font-weight-bold font-size-lg mt-1\">Tổng số người tham gia</Link>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                    <div id=\"chart\" style={{ borderBottom: 'solid', borderWidth: 'thin', marginBottom: '50px', borderColor: '#B9F8FB' }}>\r\n                      <ApexCharts options={item.dataLabel} series={item.data} type=\"bar\" height={350} />\r\n                    </div>\r\n                  </>\r\n                })}\r\n            </>}\r\n          \r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  user: auth.user\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Dashboard);\r\n"],"sourceRoot":""}