{"version":3,"sources":["app/pages/loading/index.js","app/partials/common/ButtonLoading.js","app/partials/common/InputForm.js","app/pages/customer/ListCustomer.js"],"names":["Loading","style","display","justifyContent","minHeight","alignItems","className","ButtonLoading","props","type","clsx","loading","onClick","disabled","children","InputForm","inputRef","useRef","useEffect","focus","current","placeholder","value","min","maxLength","onChange","e","onChangeValue","target","onKeyPress","required","isRequired","readOnly","isReadOnly","ref","Option","Select","useStyles1","makeStyles","theme","root","width","marginTop","spacing","overflowX","row","row1","backgroundColor","connect","user","auth","classes1","useState","page","setPage","rows","setRow","dataSearch","setData","visible","dataDelete","setDataDelete","dataDetail","setDataDetail","dataShowDetail","setDataShowDetail","isLoadDetail","setLoadDetail","total","setTotal","isLoading","setLoading","isLoadDelete","setLoadDelete","typeOrder","setTypeOrder","stateOrder","setStateOrder","nameState","setNameState","companyState","setCompanyState","emailState","setEmailState","typeState","setTypeState","seenState","setSeenState","searchanization","limit","makeRequest","then","data","signal","allCustomer","catch","err","console","log","key","hideDeleteModal","idDel","deleteAction","id","showSuccessMessageIcon","dataOrg","filter","item","showErrorMessage","hideDetailModal","seenAction","onOrder","state","elevation","onSubmit","preventDefault","name","email","company_name","phone","seen","src","height","length","map","borderRadius","cursor","data-toggle","data-placement","title","color","fontSize","marginLeft","colSpan","align","pageSize","p","s","newPage","onOk","onCancel","footer","description"],"mappings":"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","file":"static/js/4.8affd1bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './loading.css'\r\n\r\nfunction Loading() {\r\n  return <div style={{ display: 'flex', justifyContent: 'center', minHeight:'calc(100vh - 65px - 105px)',alignItems:'center' }}><div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nconst ButtonLoading = (props) => {\r\n\r\n    return <button \r\n        type={props.type || \"default\"}\r\n        className={`${clsx({\r\n            \"kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light\": props.loading\r\n        })} ${props.className || \"\"}`}\r\n        onClick={props.onClick ? props.onClick : null}\r\n        style={props.style || null}\r\n        disabled={props.disabled === true ? true : false}\r\n    >{props.children}</button>\r\n};\r\n\r\nButtonLoading.propTypes = {\r\n    className: PropTypes.string,\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    style: PropTypes.object,\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default ButtonLoading;","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputForm = (props) => {\r\n\r\n    const inputRef = useRef();\r\n\r\n    const componentDidMount = () => {\r\n      if (props.focus) {\r\n        inputRef.current.focus();\r\n      }\r\n    }\r\n\r\n    useEffect(componentDidMount, []);\r\n\r\n    return <input\r\n        type={props.type || \"text\"}\r\n        className={`form-control inline-block ${props.className || \"\"}`}\r\n        placeholder={props.placeholder || \"\"}\r\n        value={props.value}\r\n        min={props.min || \"\"}\r\n        maxLength={props.maxLength || \"\"}\r\n        onChange={(e) => { props.onChangeValue(e.target.value) }}\r\n        onKeyPress={props.onKeyPress ? (e) => { props.onKeyPress(e) } : null}\r\n        required={props.isRequired || false}\r\n        readOnly={props.isReadOnly || false}\r\n        ref={inputRef}\r\n        style={props.style}\r\n        \r\n    />\r\n};\r\n\r\nInputForm.propTypes = {\r\n    className: PropTypes.string,\r\n    type: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    isRequired: PropTypes.bool,\r\n    isReadOnly: PropTypes.bool,\r\n    isDisabled: PropTypes.bool,\r\n    value: PropTypes.any,\r\n    min: PropTypes.number,\r\n    max: PropTypes.number,\r\n    onChangeValue: PropTypes.func.isRequired\r\n};\r\n\r\nexport default InputForm;","/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Icon\r\n} from \"@material-ui/core\";\r\nimport \"./style.css\";\r\n\r\nimport { Modal, Pagination, Button, Select } from \"antd\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport InputForm from \"../../partials/common/InputForm\";\r\nimport Loading from \"../loading\";\r\nimport ButtonLoading from \"../../partials/common/ButtonLoading\";\r\nimport { connect } from \"react-redux\";\r\nimport makeRequest from \"../../libs/request\";\r\nimport {\r\n  showErrorMessage,\r\n  showSuccessMessageIcon,\r\n} from \"../../actions/notification\";\r\nconst { Option } = Select;\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  row: {\r\n  },\r\n  row1: {\r\n    backgroundColor: \"#f2e6ff\",\r\n  },\r\n}));\r\n\r\nconst ListCustomer = (props) => {\r\n  const classes1 = useStyles1();\r\n  const rowsPerPage = 10;\r\n  const [page, setPage] = useState(1);\r\n  const [rows, setRow] = useState([]);\r\n  const [dataSearch, setData] = useState({});\r\n  const [dataDelete, setDataDelete] = useState({ visible: false });\r\n  const [dataDetail, setDataDetail] = useState({ visible: false });\r\n  const [dataShowDetail, setDataShowDetail] = useState({});\r\n  const [isLoadDetail, setLoadDetail] = useState(false);\r\n  const [total, setTotal] = useState(0);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [isLoadDelete, setLoadDelete] = useState(false);\r\n  const [typeOrder, setTypeOrder] = useState('name');\r\n  const [stateOrder, setStateOrder] = useState('up');\r\n  const [nameState, setNameState] = useState('up');\r\n  const [companyState, setCompanyState] = useState('up');\r\n  const [emailState, setEmailState] = useState('up');\r\n  const [typeState, setTypeState] = useState('up');\r\n  const [seenState, setSeenState] = useState('up');\r\n\r\n  useEffect(() => {\r\n    searchanization({ page: 1, limit: rowsPerPage, typeOrder, stateOrder });\r\n  }, []);\r\n\r\n\r\n  const searchanization = (dataSearch = {}) => {\r\n    setLoading(true);\r\n    makeRequest(\"get\", `customer/search`, dataSearch)\r\n      .then(({ data }) => {\r\n        if (data.signal) {\r\n          const { allCustomer, total } = data.data;\r\n          setRow(allCustomer);\r\n          setTotal(total);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    setPage(newPage);\r\n    searchanization({ ...dataSearch, page: newPage, limit: rowsPerPage });\r\n  };\r\n\r\n  const onChangeValue = (key, value) => {\r\n    setData({\r\n      ...dataSearch,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const hideDeleteModal = () => {\r\n    setDataDelete({\r\n      ...dataDelete,\r\n      visible: false,\r\n      idDel: 0,\r\n    });\r\n  };\r\n\r\n  const deleteAction = (id) => {\r\n    setLoadDelete(true);\r\n    hideDeleteModal();\r\n    setLoadDelete(false);\r\n    makeRequest(\"get\", `customer/delete`, { id: dataDelete.id })\r\n      .then(({ data }) => {\r\n        if (data.signal) {\r\n          showSuccessMessageIcon(\"Xóa thành công\");\r\n          let dataOrg = rows.filter((item) => item.id !== dataDelete.id);\r\n          setRow(dataOrg);\r\n          hideDeleteModal();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        showErrorMessage(\"Xóa thất bại\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const showModalDelete = (id) => {\r\n    setDataDelete({\r\n      id,\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  const unfilteredData = (e) => {\r\n    setData({});\r\n    setPage(1);\r\n    searchanization({ page: 1, limit: rowsPerPage });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPage(1);\r\n    searchanization({ ...dataSearch, page: 1, limit: rowsPerPage });\r\n  };\r\n\r\n\r\n  /// Modal Detail\r\n  const hideDetailModal = () => {\r\n    setDataDetail({\r\n      ...dataDetail,\r\n      visible: false,\r\n      idDel: 0,\r\n    });\r\n  };\r\n\r\n  const seenAction = (id) => {\r\n    setLoadDetail(true);\r\n    hideDetailModal();\r\n    setLoadDetail(false);\r\n    makeRequest(\"get\", `customer/seen`, { id: dataDetail.id })\r\n      .then(({ data }) => {\r\n        if (data.signal) {\r\n          setData({});\r\n          searchanization({ ...dataSearch, page: 1, limit: rowsPerPage });\r\n          hideDetailModal();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const showModalDetail = (id) => {\r\n    makeRequest(\"get\", `customer/getbyId`, { id })\r\n      .then(({ data }) => {\r\n        if (data.signal) {\r\n          setDataShowDetail(data.data)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setDataDetail({\r\n      id,\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n\r\n  ///////////////////\r\n\r\n\r\n  const onOrder = (key, state) => {\r\n    setTypeOrder(key);\r\n    setStateOrder(state);\r\n    if (key === 'seen') {\r\n      setSeenState(state);\r\n    }\r\n    if (key === 'name') {\r\n      setNameState(state);\r\n    }\r\n    if (key === 'company_name') {\r\n      setCompanyState(state);\r\n    }\r\n    if (key === 'email') {\r\n      setEmailState(state);\r\n    }\r\n    if (key === 'type') {\r\n      setTypeState(state);\r\n    }\r\n \r\n\r\n    setPage(1);\r\n    searchanization({ ...dataSearch, page: 1, limit: rowsPerPage, typeOrder: key, stateOrder: state });\r\n  }\r\n\r\n  const renderStatusText = (category) => {\r\n    if (category === 1) {\r\n      return (<span className=\"btn btn-label-primary btn-bold btn-sm btn-icon-h\" style={{ borderRadius: '.42rem' }}>Đã Đọc</span>);\r\n    } else {\r\n      return (<span className=\"btn btn-label-warning btn-bold btn-sm btn-icon-h\" style={{ borderRadius: '.42rem' }}>Chưa Đọc</span>);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"kt-section\">\r\n            <div className=\"kt-section__content\">\r\n\r\n              <Paper className={classes1.root} elevation={4}>\r\n\r\n                <div className=\"labelList1\">\r\n                  <label>Danh Sách Yêu Cầu Khách Hàng</label>\r\n                </div>\r\n\r\n                <div className=\"col-md-12 part\">\r\n\r\n                  <Form onSubmit={handleSubmit}>\r\n\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-2 searchBox\">\r\n                        <div className=\"form-group\">\r\n                          <InputForm\r\n                            type=\"text\"\r\n                            placeholder=\"Tìm theo tên khách hàng\"\r\n                            value={dataSearch.name || \"\"}\r\n                            onChangeValue={(value) => {\r\n                              onChangeValue(\"name\", value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <InputForm\r\n                            type=\"text\"\r\n                            placeholder=\"Tìm theo email khách hàng\"\r\n                            value={dataSearch.email || \"\"}\r\n                            onChangeValue={(value) => {\r\n                              onChangeValue(\"email\", value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-2 searchBox\">\r\n                        <div className=\"form-group\">\r\n                          <InputForm\r\n                            type=\"text\"\r\n                            placeholder=\"Tìm theo tên công ty\"\r\n                            value={dataSearch.company_name || \"\"}\r\n                            onChangeValue={(value) => {\r\n                              onChangeValue(\"company_name\", value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <InputForm\r\n                            type=\"text\"\r\n                            placeholder=\"Tìm theo số điện thoại \"\r\n                            value={dataSearch.phone || \"\"}\r\n                            onChangeValue={(value) => {\r\n                              onChangeValue(\"phone\", value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-2 searchBox\">\r\n                        <div className=\"form-group\">\r\n                          <Select value={dataSearch.type || 'Yêu Cầu Từ'}\r\n                            onChange={(value) => onChangeValue('type', value)}\r\n                            className=\"selectBox\">\r\n                            <Option value=\"0\">Máy Tính </Option>\r\n                            <Option value=\"1\">Điện Thoại</Option>\r\n                          </Select>\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <Select value={dataSearch.seen || 'Trạng thái'}\r\n                            onChange={(value) => onChangeValue('seen', value)}\r\n                            className=\"selectBox\">\r\n                            <Option value=\"0\">Chưa Đọc </Option>\r\n                            <Option value=\"1\">Đã Đọc</Option>\r\n                          </Select>\r\n\r\n                        </div>\r\n\r\n                      </div>\r\n\r\n                      <div className=\"form-group col-md-2\">\r\n                        <div className=\"form-group\" className=\"sacButton\">\r\n                          <button\r\n                            className=\"btn btn-label-primary btn-bold btn-sm btn-icon-h kt-margin-l-10\"\r\n                            onClick={unfilteredData}\r\n                            type=\"button\"\r\n                          >\r\n                            <span>Bỏ lọc</span>\r\n                          </button>\r\n\r\n                          <ButtonLoading\r\n                            type=\"submit\"\r\n                            className=\"btn btn-label-primary btn-bold btn-sm btn-icon-h kt-margin-l-10\"\r\n                            loading={isLoading}\r\n                          >\r\n                            <span>Tìm kiếm</span>\r\n                          </ButtonLoading>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n                {isLoading ? (\r\n                  <Loading />\r\n                ) : (\r\n                    <Paper className=\"tablePaper\" elevation={0}>\r\n                      <Table className=\"table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell >Tên khách hàng (\r\n                                {nameState === 'down' && <img onClick={() => onOrder('name', 'up')} src='/images/down-arrow.png' width={10} height={15} /> ||\r\n                                <img onClick={() => onOrder('name', 'down')} src='/images/up-arrow.png' width={10} height={15} />})\r\n                            </TableCell>\r\n                            <TableCell  >Số điện thoại\r\n                            </TableCell>\r\n                            <TableCell  >Email khách hàng (\r\n                            {emailState === 'down' && <img onClick={() => onOrder('email', 'up')} src='/images/down-arrow.png' width={10} height={15} /> ||\r\n                                <img onClick={() => onOrder('email', 'down')} src='/images/up-arrow.png' width={10} height={15} />})\r\n                            </TableCell>\r\n                            <TableCell  >Tên Công Ty (\r\n                            {companyState === 'down' && <img onClick={() => onOrder('company_name', 'up')} src='/images/down-arrow.png' width={10} height={15} /> ||\r\n                                <img onClick={() => onOrder('company_name', 'down')} src='/images/up-arrow.png' width={10} height={15} />})\r\n                            </TableCell>\r\n                            <TableCell  > Yêu cầu từ (\r\n                            {typeState === 'down' && <img onClick={() => onOrder('type', 'up')} src='/images/down-arrow.png' width={10} height={15} /> ||\r\n                                <img onClick={() => onOrder('type', 'down')} src='/images/up-arrow.png' width={10} height={15} />})\r\n                            </TableCell>\r\n                            <TableCell  >Trạng thái (\r\n                            {seenState === 'down' && <img onClick={() => onOrder('seen', 'up')} src='/images/down-arrow.png' width={10} height={15} /> ||\r\n                                <img onClick={() => onOrder('seen', 'down')} src='/images/up-arrow.png' width={10} height={15} />})\r\n                            </TableCell>\r\n                            <TableCell className=\"btnAction\" >Action</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {rows && rows.length ? (\r\n                            rows.map((row, key) => (\r\n                              <TableRow className={row.seen ? classes1.row : classes1.row1} key={`customer-${key}`}>\r\n                                <TableCell> <div className=\"cell\">{row.name}</div></TableCell>\r\n                                <TableCell><div className=\"cell\">{row.phone}</div></TableCell>\r\n                                <TableCell><div className=\"cell\">{row.email}</div></TableCell>\r\n                                <TableCell><div className=\"cell\">{row.company_name}</div></TableCell>\r\n                                <TableCell>{(row.type == 0) ? 'Máy Tính' : 'Điện Thoại'}</TableCell>\r\n                                <TableCell>{renderStatusText(row.seen)}</TableCell>\r\n                                <TableCell>\r\n                                  <span\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    data-toggle=\"tooltip\"\r\n                                    data-placement=\"top\"\r\n                                    title=\"Detail\"\r\n                                  >\r\n                                    <Icon\r\n                                      className=\"fa fa-info-circle\"\r\n                                      onClick={(e) => {\r\n                                        showModalDetail(row.id);\r\n                                      }}\r\n                                      style={{\r\n                                        color: \"#0000ff\",\r\n                                        fontSize: 15,\r\n                                      }}\r\n                                    />\r\n                                  </span>\r\n                                  <span\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    data-toggle=\"tooltip\"\r\n                                    data-placement=\"top\"\r\n                                    title=\"Delete\"\r\n                                  >\r\n                                    <Icon\r\n                                      className=\"fa fa-trash\"\r\n                                      onClick={() => showModalDelete(row.id)}\r\n                                      style={{\r\n                                        color: \"rgb(220, 0, 78)\",\r\n                                        fontSize: 15,\r\n                                        marginLeft: 15,\r\n                                      }}\r\n                                    />\r\n                                  </span>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            ))\r\n                          ) : (\r\n                              <TableRow>\r\n                                <TableCell colSpan={10} align=\"center\">\r\n                                  Không có dữ liệu\r\n                          </TableCell>\r\n                              </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                      </Table>\r\n\r\n                    </Paper>\r\n                  )}\r\n                {total > rowsPerPage && (\r\n                  <div className=\"custom-svg customSelector\">\r\n                    <Pagination\r\n                      className=\"pagination-crm\"\r\n                      current={page}\r\n                      pageSize={rowsPerPage}\r\n                      total={total}\r\n                      onChange={(p, s) => handleChangePage(p)}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Paper>\r\n            </div>\r\n            <Modal\r\n              title=\"Xóa Yêu Cầu\"\r\n              visible={dataDelete.visible}\r\n              onOk={deleteAction}\r\n              onCancel={hideDeleteModal}\r\n              footer={[\r\n                <ButtonLoading\r\n                  type=\"default\"\r\n                  onClick={hideDeleteModal}\r\n                  className=\"btn btn-label-secondary btn-secondary\"\r\n                >\r\n                  Đóng\r\n                </ButtonLoading>,\r\n                <ButtonLoading\r\n                  className=\"btn btn-label-danger btn-danger\"\r\n                  onClick={deleteAction}\r\n                  loading={isLoadDelete}\r\n                >\r\n                  <span>Xóa</span>\r\n                </ButtonLoading>,\r\n              ]}\r\n            >\r\n              <p>Bạn có muốn xóa yêu cầu này?</p>\r\n            </Modal>\r\n            <Modal\r\n               width={1200}\r\n              title=\"Yêu Cầu Của Khách Hàng\"\r\n              visible={dataDetail.visible}\r\n              onOk={seenAction}\r\n              onCancel={seenAction}\r\n              footer={[\r\n\r\n                <ButtonLoading\r\n                  className=\"btn btn-label-primary btn-primary\"\r\n                  onClick={seenAction}\r\n                  loading={isLoadDetail}\r\n                >\r\n                  <span>OK</span>\r\n                </ButtonLoading>,\r\n              ]}\r\n            >\r\n              <table>\r\n                <tr>\r\n                  <td>Tên </td>\r\n                  <td>: {dataShowDetail.name}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Email  </td>\r\n                  <td>: {dataShowDetail.email}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Số điện thoại </td>\r\n                  <td>: {dataShowDetail.phone}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Tên Công Ty :</td>\r\n                  <td>: {dataShowDetail.company_name} </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Yêu cầu từ </td>\r\n                  <td>: {(dataShowDetail.type == 0) ? 'Máy Tính' : 'Điện Thoại'}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Yêu Cầu </td>\r\n                  <td id=\"des\">: {dataShowDetail.description}</td>\r\n                </tr>\r\n              </table>\r\n\r\n            </Modal>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  user: auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ListCustomer);\r\n"],"sourceRoot":""}